/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package enrollmentsystem.gui.dialog.au;

import enrollmentsystem.data.AppQuery;
import enrollmentsystem.data.ComboBoxList;
import enrollmentsystem.records.Course;
import enrollmentsystem.records.CourseMajor;
import enrollmentsystem.util.ComboBoxAutoFill;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Java Programming with Aldrin
 */
public class JDialogCourseMajorAU extends javax.swing.JDialog {

    /**
     * Creates new form JDialogUserAU
     */
    private CourseMajor courseMajor;
    private enrollmentsystem.gui.JFrameEnrollment mainFrame;
    private AppQuery query = new AppQuery();
    private JTextComponent editor;

    public JDialogCourseMajorAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Add Major");
        jButton1.setText("Save");
        jButton1.setMnemonic('S');
        comboBoxCourseMajor();
        jComboBoxCourse.setEditable(true);
        editor = (JTextComponent) jComboBoxCourse.getEditor().getEditorComponent();
        editor.setDocument(new ComboBoxAutoFill(jComboBoxCourse));

    }

    public JDialogCourseMajorAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal, CourseMajor course) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Update Major");
        jButton1.setText("Update");
        jTextFieldMajor.setText(course.major());
        jButton1.setMnemonic('U');
        this.courseMajor = course;
        comboBoxCourseMajor();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(course.course().id()), jComboBoxCourse);
        }
    }

    public JDialogCourseMajorAU(enrollmentsystem.gui.JFrameEnrollment parent, CourseMajor course, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Delete Major");
        jButton1.setText("Delete");
        jTextFieldMajor.setText(course.major());
        jTextFieldMajor.setFocusable(false);
        jButton1.setMnemonic('D');
        this.courseMajor = course;
        comboBoxCourseMajor();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(course.course().id()), jComboBoxCourse);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxCourse = new javax.swing.JComboBox<>();
        jTextFieldMajor = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("COURSE:");
        jPanel1.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("MAJOR:");
        jPanel1.add(jLabel2);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 97, 80));

        jPanel2.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jPanel2.add(jComboBoxCourse);

        jTextFieldMajor.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldMajor);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 21, 280, 80));

        jButton1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jButton1.setText("Enter");
        jButton1.setPreferredSize(new java.awt.Dimension(72, 36));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 370, -1));

        setSize(new java.awt.Dimension(413, 200));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jButton1.getText().equals("Save")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to add " + jTextFieldMajor.getText() + " ?", "Add major confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList courseIdl = (ComboBoxList) this.jComboBoxCourse.getSelectedItem();
                enrollmentsystem.records.Course c = new Course(Integer.parseInt(courseIdl.getId()), courseIdl.getId(), courseIdl.getId());
                CourseMajor courseM = new CourseMajor(null, c, jTextFieldMajor.getText());
                new AppQuery().addCourseMajor(courseM);
                this.dispose();
            }
        } else if (jButton1.getText().equals("Update")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to update " + jTextFieldMajor.getText() + " ?", "Add major confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList courseIdl = (ComboBoxList) this.jComboBoxCourse.getSelectedItem();
                enrollmentsystem.records.Course c = new Course(Integer.parseInt(courseIdl.getId()), courseIdl.getId(), courseIdl.getId());
                CourseMajor courseM = new CourseMajor(courseMajor.id(), c, jTextFieldMajor.getText());
                new AppQuery().updateCourseMajor(courseM);
                this.dispose();
            }
        } else if (jButton1.getText().equals("Delete")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to delete " + jTextFieldMajor.getText() + " ?", "Add major confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList courseIdl = (ComboBoxList) this.jComboBoxCourse.getSelectedItem();
                enrollmentsystem.records.Course c = new Course(Integer.parseInt(courseIdl.getId()), courseIdl.getId(), courseIdl.getId());
                CourseMajor cm = new CourseMajor(this.courseMajor.id(), c, jTextFieldMajor.getText());
                new AppQuery().deleteCourseMajor(cm);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Object> jComboBoxCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldMajor;
    // End of variables declaration//GEN-END:variables
  private void comboBoxCourseMajor() {
        this.jComboBoxCourse.removeAllItems();
        query.comboBoxCourse();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxCourse.addItem(a);
        }
    }

}
