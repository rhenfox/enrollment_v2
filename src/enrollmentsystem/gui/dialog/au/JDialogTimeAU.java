/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package enrollmentsystem.gui.dialog.au;

import enrollmentsystem.data.AppQuery;
import enrollmentsystem.data.ComboBoxList;
import enrollmentsystem.records.Course;
import enrollmentsystem.records.Day;
import enrollmentsystem.records.Time;
import javax.swing.JOptionPane;

/**
 *
 * @author Java Programming with Aldrin
 */
public class JDialogTimeAU extends javax.swing.JDialog {

    /**
     * Creates new form JDialogUserAU
     */
    private Time time;
    private enrollmentsystem.gui.JFrameEnrollment mainFrame;
    private AppQuery query = new AppQuery();

    public JDialogTimeAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Add time");
        jButton1.setText("Save");
        jButton1.setMnemonic('S');
        comboBoxDay();

    }

    public JDialogTimeAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal, Time time) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Update time");
        jButton1.setText("Update");
        jTextFieldTime.setText(time.time());
        jButton1.setMnemonic('U');
        this.time = time;
        jButton1.setEnabled(false);
        comboBoxDay();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(time.day().id()), jComboBoxDay);
        }
    }

    public JDialogTimeAU(enrollmentsystem.gui.JFrameEnrollment parent, Time time, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainFrame = parent;
        setTitle("Delete time");
        jButton1.setText("Delete");
        jTextFieldTime.setText(time.time());
        jTextFieldTime.setFocusable(false);
        jButton1.setMnemonic('D');
        this.time = time;
        comboBoxDay();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(time.day().id()), jComboBoxDay);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxDay = new javax.swing.JComboBox<>();
        jTextFieldTime = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("DAY:");
        jPanel1.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("TIME:");
        jPanel1.add(jLabel2);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 97, 80));

        jPanel2.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jPanel2.add(jComboBoxDay);

        jTextFieldTime.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jTextFieldTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTimeKeyReleased(evt);
            }
        });
        jPanel2.add(jTextFieldTime);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 21, 280, 80));

        jButton1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jButton1.setText("Enter");
        jButton1.setPreferredSize(new java.awt.Dimension(72, 36));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 140, -1));

        setSize(new java.awt.Dimension(413, 200));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jButton1.getText().equals("Save")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to add " + jTextFieldTime.getText() + " ?", "Add time confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList dayId = (ComboBoxList) this.jComboBoxDay.getSelectedItem();
                Day day = new Day(Integer.parseInt(dayId.getId()), jComboBoxDay.getSelectedItem().toString(), jComboBoxDay.getSelectedItem().toString());
                Time time = new Time(0, day, jTextFieldTime.getText());
                new AppQuery().addTime(time);
                this.dispose();
            }
        } else if (jButton1.getText().equals("Update")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to update " + jTextFieldTime.getText() + " ?", "Add time confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList dayId = (ComboBoxList) this.jComboBoxDay.getSelectedItem();
                Day day = new Day(Integer.parseInt(dayId.getId()), jComboBoxDay.getSelectedItem().toString(), jComboBoxDay.getSelectedItem().toString());
                Time time = new Time(this.time.id(), day, jTextFieldTime.getText());
                new AppQuery().updateTime(time);
                this.dispose();
            }
        } else if (jButton1.getText().equals("Delete")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to delete " + jTextFieldTime.getText() + " ?", "Add time confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                ComboBoxList dayId = (ComboBoxList) this.jComboBoxDay.getSelectedItem();
                Day day = new Day(Integer.parseInt(dayId.getId()), jComboBoxDay.getSelectedItem().toString(), jComboBoxDay.getSelectedItem().toString());
                Time time = new Time(this.time.id(), day, jTextFieldTime.getText());
                new AppQuery().deleteTime(time);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTimeKeyReleased

    }//GEN-LAST:event_jTextFieldTimeKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Object> jComboBoxDay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldTime;
    // End of variables declaration//GEN-END:variables
   private void comboBoxDay() {
        this.jComboBoxDay.removeAllItems();
        query.comboBoxDay();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxDay.addItem(a);
        }
    }

}
