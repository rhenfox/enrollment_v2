/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package enrollmentsystem.gui.dialog.au;

import enrollmentsystem.data.AppQuery;
import enrollmentsystem.data.ComboBoxList;
import enrollmentsystem.gui.JFrameEnrollment;
import enrollmentsystem.records.CivilStatus;
import enrollmentsystem.records.Instructor;
import enrollmentsystem.util.ImagePreview;
import enrollmentsystem.util.ImageFilter;

import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Blob;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Java Programming with Aldrin
 */
public class JDialogInstructorAU extends javax.swing.JDialog {

    /**
     * Creates new form JDialogStudentAU
     */
    private AppQuery query = new AppQuery();
    private JTextComponent editor;
    private JFrameEnrollment mainFrame;
    private Instructor instructor;
    private File photo = null;

    public JDialogInstructorAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Add instructor");
        jButton1.setText("Save");
        jButton1.setMnemonic('S');
        comboBoxCivilStatus();
    }

    public JDialogInstructorAU(enrollmentsystem.gui.JFrameEnrollment parent, boolean modal, Instructor instructor) {
        super(parent, modal);
        initComponents();
        comboBoxCivilStatus();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(instructor.civilStatus().id()), jComboBoxCivilStatus);
        }
        this.instructor = instructor;
        setTitle("Update instructor");
        jButton1.setText("Update");
        jButton1.setMnemonic('U');
        this.instructor = instructor;
        jTextFieldFirstname.setText(instructor.firstname());
        jTextFieldMiddlename.setText(instructor.middlename());
        jTextFieldLastname.setText(instructor.lastname());
        jDateChooserDoB.setDate(new Date(Integer.parseInt(instructor.dateOfBirth().toString().substring(0, 4)) - 1900, Integer.parseInt(instructor.dateOfBirth().toString().substring(5, 7)) - 1, Integer.parseInt(instructor.dateOfBirth().substring(8))));
        jComboBoxGender.setSelectedItem(instructor.gender());
        jTextFieldMobile.setText(instructor.mobileNo());
        jTextFieldEmail.setText(instructor.email());
        jTextFieldAddress.setText(instructor.address());
        jLabelPhoto.setText("");
        displayPicture(instructor.id());

    }

    public JDialogInstructorAU(enrollmentsystem.gui.JFrameEnrollment parent, Instructor instructor, boolean modal) {
        super(parent, modal);
        initComponents();
        comboBoxCivilStatus();
        for (ComboBoxList a : this.query.getList()) {
            a.setSelectedId(query.getList(), String.valueOf(instructor.civilStatus().id()), jComboBoxCivilStatus);
        }
        this.instructor = instructor;
        setTitle("Delete instructor");
        jButton1.setText("Delete");
        jButton1.setMnemonic('U');
        this.instructor = instructor;
        jTextFieldFirstname.setText(instructor.firstname());
        jTextFieldMiddlename.setText(instructor.middlename());
        jTextFieldLastname.setText(instructor.lastname());
        jDateChooserDoB.setDate(new Date(Integer.parseInt(instructor.dateOfBirth().toString().substring(0, 4)) - 1900, Integer.parseInt(instructor.dateOfBirth().toString().substring(5, 7)) - 1, Integer.parseInt(instructor.dateOfBirth().substring(8))));
        jComboBoxGender.setSelectedItem(instructor.gender());
        jTextFieldMobile.setText(instructor.mobileNo());
        jTextFieldEmail.setText(instructor.email());
        jTextFieldAddress.setText(instructor.address());
        jLabelPhoto.setText("");
        displayPicture(instructor.id());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldFirstname = new javax.swing.JTextField();
        jTextFieldMiddlename = new javax.swing.JTextField();
        jTextFieldLastname = new javax.swing.JTextField();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jComboBoxCivilStatus = new javax.swing.JComboBox<>();
        jDateChooserDoB = new com.toedter.calendar.JDateChooser();
        jTextFieldMobile = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldAddress = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("FIRST NAME:");
        jPanel1.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("MIDDLE NAME:");
        jPanel1.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("LAST NAME:");
        jPanel1.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("GENDER:");
        jPanel1.add(jLabel4);

        jLabel9.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("CIVIL STATUS:");
        jPanel1.add(jLabel9);

        jLabel5.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("DATE OF BIRTH:");
        jPanel1.add(jLabel5);

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("MOBILE#:");
        jPanel1.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("EMAIL:");
        jPanel1.add(jLabel7);

        jLabel8.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("ADDRESS:");
        jPanel1.add(jLabel8);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 120, 280));

        jPanel2.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        jTextFieldFirstname.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldFirstname);

        jTextFieldMiddlename.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldMiddlename);

        jTextFieldLastname.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldLastname);

        jComboBoxGender.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MALE", "FEMALE" }));
        jPanel2.add(jComboBoxGender);

        jPanel2.add(jComboBoxCivilStatus);
        jPanel2.add(jDateChooserDoB);

        jTextFieldMobile.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jTextFieldMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMobileActionPerformed(evt);
            }
        });
        jPanel2.add(jTextFieldMobile);

        jTextFieldEmail.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldEmail);

        jTextFieldAddress.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jPanel2.add(jTextFieldAddress);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 21, 260, 280));

        jButton1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jButton1.setText("Enter");
        jButton1.setPreferredSize(new java.awt.Dimension(72, 36));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 610, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabelPhoto.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabelPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPhoto.setText("No Photo");
        jLabelPhoto.setMaximumSize(new java.awt.Dimension(220, 220));
        jLabelPhoto.setMinimumSize(new java.awt.Dimension(220, 220));
        jLabelPhoto.setPreferredSize(new java.awt.Dimension(220, 220));
        jLabelPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPhotoMouseClicked(evt);
            }
        });
        jPanel3.add(jLabelPhoto, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 220, 220));

        setSize(new java.awt.Dimension(655, 407));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMobileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jButton1.getText().equals("Save")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to add " + jTextFieldFirstname.getText() + " " + jTextFieldLastname.getText() + " ?", "Add instructor confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                Instructor instructor;
                if (this.photo == null) {
                    ComboBoxList civilStatusId = (ComboBoxList) this.jComboBoxCivilStatus.getSelectedItem();
                    CivilStatus civilStatus = new CivilStatus(Integer.parseInt(civilStatusId.getId()), jComboBoxCivilStatus.getSelectedItem().toString());
                    instructor = new Instructor(query.createdInstructorId(), jTextFieldFirstname.getText(), jTextFieldMiddlename.getText(), jTextFieldLastname.getText(), jComboBoxGender.getSelectedItem().toString(), civilStatus, new java.sql.Date(jDateChooserDoB.getDate().getTime()).toString(), jTextFieldMobile.getText(), jTextFieldEmail.getText(), jTextFieldAddress.getText(), new File(System.getProperty("user.dir") + "/src/enrollmentsystem/icons/no photo.jpg"));
                    new AppQuery().addInstructor(instructor, false);
                } else {
                    ComboBoxList civilStatusId = (ComboBoxList) this.jComboBoxCivilStatus.getSelectedItem();
                    CivilStatus civilStatus = new CivilStatus(Integer.parseInt(civilStatusId.getId()), jComboBoxCivilStatus.getSelectedItem().toString());
                    instructor = new Instructor(query.createdInstructorId(), jTextFieldFirstname.getText(), jTextFieldMiddlename.getText(), jTextFieldLastname.getText(), jComboBoxGender.getSelectedItem().toString(), civilStatus, new java.sql.Date(jDateChooserDoB.getDate().getTime()).toString(), jTextFieldMobile.getText(), jTextFieldEmail.getText(), jTextFieldAddress.getText(), new File(System.getProperty("user.dir") + "/src/enrollmentsystem/icons/model.jpg"));
                    new AppQuery().addInstructor(instructor, true);
                }

                this.dispose();
            }
        } else if (jButton1.getText().equals("Update")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to update " + jTextFieldFirstname.getText() + " " + jTextFieldLastname.getText() + " ?", "Add instructor confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                Instructor instructor;
                if (this.photo == null) {
                    ComboBoxList civilStatusId = (ComboBoxList) this.jComboBoxCivilStatus.getSelectedItem();
                    CivilStatus civilStatus = new CivilStatus(Integer.parseInt(civilStatusId.getId()), jComboBoxCivilStatus.getSelectedItem().toString());
                    instructor = new Instructor(this.instructor.id(), jTextFieldFirstname.getText(), jTextFieldMiddlename.getText(), jTextFieldLastname.getText(), jComboBoxGender.getSelectedItem().toString(), civilStatus, new java.sql.Date(jDateChooserDoB.getDate().getTime()).toString(), jTextFieldMobile.getText(), jTextFieldEmail.getText(), jTextFieldAddress.getText(), new File(System.getProperty("user.dir") + "/src/enrollmentsystem/icons/no photo.jpg"));
                    new AppQuery().updateInstructor(instructor, false);
                } else {
                    ComboBoxList civilStatusId = (ComboBoxList) this.jComboBoxCivilStatus.getSelectedItem();
                    CivilStatus civilStatus = new CivilStatus(Integer.parseInt(civilStatusId.getId()), jComboBoxCivilStatus.getSelectedItem().toString());
                    instructor = new Instructor(this.instructor.id(), jTextFieldFirstname.getText(), jTextFieldMiddlename.getText(), jTextFieldLastname.getText(), jComboBoxGender.getSelectedItem().toString(), civilStatus, new java.sql.Date(jDateChooserDoB.getDate().getTime()).toString(), jTextFieldMobile.getText(), jTextFieldEmail.getText(), jTextFieldAddress.getText(), new File(System.getProperty("user.dir") + "/src/enrollmentsystem/icons/model.jpg"));
                    new AppQuery().updateInstructor(instructor, true);
                }
                this.dispose();
            }
        } else if (jButton1.getText().equals("Delete")) {
            int response = JOptionPane.showConfirmDialog(mainFrame, "Are you sure to update " + jTextFieldFirstname.getText() + " " + jTextFieldLastname.getText() + " ?", "Add instructor confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                new AppQuery().deleteInstructor(this.instructor);
                this.dispose();
            }
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    private void jLabelPhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPhotoMouseClicked

        browse();
    }//GEN-LAST:event_jLabelPhotoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Object> jComboBoxCivilStatus;
    private javax.swing.JComboBox<Object> jComboBoxGender;
    private com.toedter.calendar.JDateChooser jDateChooserDoB;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelPhoto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFirstname;
    private javax.swing.JTextField jTextFieldLastname;
    private javax.swing.JTextField jTextFieldMiddlename;
    private javax.swing.JTextField jTextFieldMobile;
    // End of variables declaration//GEN-END:variables

    private void browse() {
        try {
            jFileChooser1.setAccessory(new ImagePreview(jFileChooser1));
            jFileChooser1.setFileFilter(new ImageFilter());
            int returnVal = jFileChooser1.showOpenDialog(this);
            if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
                photo = jFileChooser1.getSelectedFile();

                int IMG_WIDTH = jLabelPhoto.getWidth();
                int IMG_HEIGHT = jLabelPhoto.getHeight();
                jLabelPhoto.setText("");
                try {
                    BufferedImage originalImage = ImageIO.read(photo);
                    int type = originalImage.getType() == 0 ? BufferedImage.TYPE_INT_ARGB : originalImage.getType();

                    BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
                    Graphics2D g = resizedImage.createGraphics();
                    g.drawImage(originalImage, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
                    g.dispose();
                    g.setComposite(AlphaComposite.Src);

                    g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                            RenderingHints.VALUE_INTERPOLATION_BILINEAR);
                    g.setRenderingHint(RenderingHints.KEY_RENDERING,
                            RenderingHints.VALUE_RENDER_QUALITY);
                    g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                            RenderingHints.VALUE_ANTIALIAS_ON);
                    jLabelPhoto.setIcon(new ImageIcon(resizedImage)); //to eliminate .jpeg from picture filename
                    ImageIO.write(resizedImage, "png", new File("src\\enrollmentsystem\\icons\\model.jpg"));

                } catch (final IOException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Opss...", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void displayPicture(Integer id) {
        try {
            Blob blobImage = (Blob) query.selectedInstructorPhoto(id);
            ImageIcon icon = new ImageIcon(blobImage.getBytes(1L, (int) blobImage.length()));

            Image image = icon.getImage();

            int IMG_WIDTH = 220;
            int IMG_HEIGHT = 220;
            int type = BufferedImage.TYPE_INT_ARGB;

            BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
            Graphics2D g = resizedImage.createGraphics();
            g.drawImage(image, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
            g.dispose();
            g.setComposite(AlphaComposite.Src);

            g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g.setRenderingHint(RenderingHints.KEY_RENDERING,
                    RenderingHints.VALUE_RENDER_QUALITY);
            g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);

            jLabelPhoto.setIcon(new ImageIcon(resizedImage));//image to label

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void comboBoxCivilStatus() {
        this.jComboBoxCivilStatus.removeAllItems();
        query.comboBoxCivilStatus();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxCivilStatus.addItem(a);
        }
    }

}
